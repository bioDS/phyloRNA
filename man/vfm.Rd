% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vfm.r
\name{vfm}
\alias{vfm}
\title{Make a variant call matrix}
\usage{
vfm(
  bam,
  vcf,
  barcodes,
  output = NULL,
  min_coverage = 0,
  nthreads = 16,
  varchunk = 1000,
  chunksize = 1,
  adaptive = FALSE,
  factor = 4,
  remake = FALSE,
  message = FALSE
)
}
\arguments{
\item{bam}{an input bam file}

\item{vcf}{an input vcf file}

\item{barcodes}{a barcode file}

\item{output}{**optional an output file. If not specified \verb{<bam>.vcm} in a current directory
is used.}

\item{min_coverage}{\strong{optional} a minimum coverage for a position to not be considered
unknown data}

\item{nthreads}{\strong{optional} a number of threads to run on}

\item{varchunk}{\strong{optional} a number of variants processed each iteration. The larger this
number is, the more variants are processed at once and distributed among processes. This should
reduce multiprocessing overhead and guarantee that there is enough data to send around as not
all variants might pass the filter. However, this also means that more information have to be
hold in memory, and read and written to a file at once.}

\item{chunksize}{\strong{optional} a number of variants assigned to a process during each iteration.
Larger number reduce multiprocessing overhead but makes scheduling harder.}

\item{adaptive}{\strong{optional} Use an adaptive chunksize calculation instead of a fixed number.
The adaptive approach calculates chunksize for each subset of variants that passed the filter.
This guarantee that the data are aways divided among the processes equally.}

\item{factor}{\strong{optional} If an adaptive chunksize is chosen, the variants that passed
the filter are divided into a factor\*nthreads of equally sized subsets. Larger factor
trades a smaller overhead for a potential scheduling problems.}

\item{remake}{\strong{optional} remake the output if it already exists}

\item{message}{\strong{optional} Print a progress mesage.}
}
\description{
Create a Variant Call Matrix file (VCM) by a taking the most common base for each barcode
according to reads in bam file and variants in a vcf file.
}
\details{
This code is a thin wrapper over the Python script \code{vfm} found in the package's \code{inst}
folder.
}
